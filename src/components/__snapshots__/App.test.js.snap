// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`App Should render correctly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <TicTacToe />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <h1
          className="game-title"
        >
          Let's play the tic-tac-toe game!
        </h1>,
        <div
          className="container"
        >
          <ResultModal
            gameResult={null}
            goTo={[Function]}
            isPlayerOne={false}
          />
          <TurnHeader
            isPlayerOne={true}
          />
          <Board
            boxes={
              Array [
                null,
                null,
                null,
                null,
                null,
                null,
                null,
                null,
                null,
              ]
            }
            onClick={[Function]}
          />
          <MovesHistory
            goTo={[Function]}
            step={0}
          />
          <ResetGame
            goTo={[Function]}
          />
        </div>,
      ],
      "className": "main",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "Let's play the tic-tac-toe game!",
          "className": "game-title",
        },
        "ref": null,
        "rendered": "Let's play the tic-tac-toe game!",
        "type": "h1",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <ResultModal
              gameResult={null}
              goTo={[Function]}
              isPlayerOne={false}
            />,
            <TurnHeader
              isPlayerOne={true}
            />,
            <Board
              boxes={
                Array [
                  null,
                  null,
                  null,
                  null,
                  null,
                  null,
                  null,
                  null,
                  null,
                ]
              }
              onClick={[Function]}
            />,
            <MovesHistory
              goTo={[Function]}
              step={0}
            />,
            <ResetGame
              goTo={[Function]}
            />,
          ],
          "className": "container",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "gameResult": null,
              "goTo": [Function],
              "isPlayerOne": false,
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "isPlayerOne": true,
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "boxes": Array [
                null,
                null,
                null,
                null,
                null,
                null,
                null,
                null,
                null,
              ],
              "onClick": [Function],
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "goTo": [Function],
              "step": 0,
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "goTo": [Function],
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
        ],
        "type": "div",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <h1
            className="game-title"
          >
            Let's play the tic-tac-toe game!
          </h1>,
          <div
            className="container"
          >
            <ResultModal
              gameResult={null}
              goTo={[Function]}
              isPlayerOne={false}
            />
            <TurnHeader
              isPlayerOne={true}
            />
            <Board
              boxes={
                Array [
                  null,
                  null,
                  null,
                  null,
                  null,
                  null,
                  null,
                  null,
                  null,
                ]
              }
              onClick={[Function]}
            />
            <MovesHistory
              goTo={[Function]}
              step={0}
            />
            <ResetGame
              goTo={[Function]}
            />
          </div>,
        ],
        "className": "main",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Let's play the tic-tac-toe game!",
            "className": "game-title",
          },
          "ref": null,
          "rendered": "Let's play the tic-tac-toe game!",
          "type": "h1",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <ResultModal
                gameResult={null}
                goTo={[Function]}
                isPlayerOne={false}
              />,
              <TurnHeader
                isPlayerOne={true}
              />,
              <Board
                boxes={
                  Array [
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                  ]
                }
                onClick={[Function]}
              />,
              <MovesHistory
                goTo={[Function]}
                step={0}
              />,
              <ResetGame
                goTo={[Function]}
              />,
            ],
            "className": "container",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "gameResult": null,
                "goTo": [Function],
                "isPlayerOne": false,
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "isPlayerOne": true,
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "boxes": Array [
                  null,
                  null,
                  null,
                  null,
                  null,
                  null,
                  null,
                  null,
                  null,
                ],
                "onClick": [Function],
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "goTo": [Function],
                "step": 0,
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "goTo": [Function],
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
          ],
          "type": "div",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
