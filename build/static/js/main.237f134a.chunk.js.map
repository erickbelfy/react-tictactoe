{"version":3,"sources":["components/BoardRow.js","components/oSymbol.js","components/xSymbol.js","components/SvgAnimationAction.js","components/Box.js","components/Board.js","components/MovesHistory.js","components/TurnHeader.js","components/ResetGame.js","components/ResultModal.js","components/App.js","serviceWorker.js","index.js"],"names":["BoardRow","_ref","children","react_default","a","createElement","className","OSymbol","isAnimating","width","height","viewBox","version","id","stroke","fill","transform","filter","concat","cx","cy","r","XSymbol","d","SvgAnimationAction","action","oSymbol","PLAYER_TWO_SYMBOL","xSymbol","PLAYER_ONE_SYMBOL","Box","value","onClick","components_SvgAnimationAction","Board","boxes","generateBoxesMatrix","reduce","prevBoxes","currentBox","idx","arr","slice","renderBoxesOnBoard","matrix","map","row","rowIdx","components_BoardRow","key","box","boxIdx","components_Box","generateBoard","MovesHistory","step","goTo","title","disabled","alt","src","TurnHeader","isPlayerOne","ResetGame","isEndGame","ResultModal","gameResult","components_ResetGame","TicTacToe","state","history","Array","BOARD_ARRAY_LENGTH","playerOneIsNext","calculateWinner","lines","i","length","_lines$i","Object","slicedToArray","b","c","handleClick","_this","setState","this","some","entry","components_ResultModal","components_TurnHeader","components_Board","components_MovesHistory","Component","Boolean","window","location","hostname","match","ReactDOM","render","components_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.237f134a.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from 'prop-types';\n\nconst BoardRow = ({ children }) => <div className=\"row\">{children}</div>;\nBoardRow.propTypes = {\n  children: PropTypes.array\n};\n\nexport default BoardRow;","import React from \"react\";\nimport PropTypes from \"prop-types\";\nconst OSymbol = ({ isAnimating }) => (\n  <svg\n    className={isAnimating ? 'appear': 'img'}\n    width=\"86px\"\n    height=\"88px\"\n    viewBox=\"0 0 86 88\"\n    version=\"1.1\"\n  >\n    <g id=\"Page-1\" stroke=\"none\" fill=\"none\">\n      <g id=\"Artboard-21\" transform=\"translate(0.000000, -26.000000)\">\n        <g id=\"Oval-5\">\n          <use fill=\"black\" filter=\"url(#filter-2)\" />\n          <circle\n            className={`svg-img ${isAnimating ? \"draw\" : \"\"}`}\n            stroke=\"#79CADC\"\n            cx=\"41\"\n            cy=\"71\"\n            r=\"27\"\n          />\n        </g>\n      </g>\n    </g>\n  </svg>\n);\nOSymbol.propTypes = {\n    isAnimating: PropTypes.bool.isRequired\n}\nexport default OSymbol;","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst XSymbol = ({ isAnimating }) => (\n  <svg\n    className={isAnimating ? 'appear': 'img'}\n    width=\"66px\"\n    height=\"66px\"\n    viewBox=\"0 0 66 66\"\n    version=\"1.1\"\n  >\n    <defs />\n    <g id=\"Page-1\" stroke=\"none\" fill=\"none\">\n      <g\n        id=\"Artboard-23\"\n        transform=\"translate(-16.000000, -21.000000)\"\n        stroke=\"#3A98D4\"\n      >\n        <g\n          id=\"Group\"\n          className=\"svg-img\"\n          transform=\"translate(24.000000, 29.000000)\"\n        >\n          <path\n            d=\"M0.497425847,0.497425847 L49.0583794,49.0583794\"\n            id=\"Line\"\n            className={isAnimating ? \"draw\" : \"\"}\n          />\n          <path\n            className={isAnimating ? \"draw1\" : \"\"}\n            d=\"M0.497425847,0.497425847 L49.0583794,49.0583794\"\n            id=\"Line\"\n            transform=\"translate(25.000000, 25.000000) scale(-1, 1) translate(-25.000000, -25.000000) \"\n          />\n        </g>\n      </g>\n    </g>\n  </svg>\n);\nXSymbol.propTypes = {\n    isAnimating: PropTypes.bool.isRequired \n}\nexport default XSymbol;","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport OSymbol from './oSymbol';\nimport XSymbol from './xSymbol';\nimport { PLAYER_ONE_SYMBOL, PLAYER_TWO_SYMBOL } from \"./App\";\n\nconst SvgAnimationAction = ({ action }) => {\n  let svg =\n    action === \"O\" ? (\n      <OSymbol isAnimating={action === PLAYER_TWO_SYMBOL} />\n    ) : (\n      <XSymbol isAnimating={action === PLAYER_ONE_SYMBOL} />\n    );\n  return svg ;\n};\nSvgAnimationAction.propTypes = {\n    action: PropTypes.string\n}\nexport default SvgAnimationAction;","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport SvgAnimationAction from './SvgAnimationAction';\n\nconst Box = ({ value, onClick }) => (\n  <button className=\"square\" onClick={onClick}>\n    <SvgAnimationAction action={value} />\n  </button>\n);\nBox.propTypes = {\n  value: PropTypes.string,\n  onClick: PropTypes.func.isRequired\n};\n\nexport default Box;\n","import React from \"react\";\nimport PropTypes from 'prop-types';\nimport BoardRow from './BoardRow';\nimport Box from './Box';\n\nconst Board = ({ boxes, onClick }) => {\n  const CHUNK_SIZE = 3;\n  const generateBoard = () => {\n    let matrix = generateBoxesMatrix(boxes);\n    return renderBoxesOnBoard(matrix);\n  };\n\n  const generateBoxesMatrix = boxes => {\n    return boxes.reduce(\n      (prevBoxes, currentBox, idx, arr) =>\n        !(idx % CHUNK_SIZE)\n          ? prevBoxes.concat([arr.slice(idx, idx + CHUNK_SIZE)])\n          : prevBoxes,\n      []\n    );\n  };\n\n  const renderBoxesOnBoard = matrix => {\n    return matrix.map((row, rowIdx) => {\n      return (\n        <BoardRow key={rowIdx}>\n          {row.map((box, boxIdx) => {\n            return (\n              <Box\n                key={boxIdx}\n                value={box}\n                onClick={() => {\n                  onClick(rowIdx * CHUNK_SIZE + boxIdx);\n                }}\n              />\n            );\n          })}\n        </BoardRow>\n      );\n    });\n  };\n\n  return <div className=\"game-board\">{generateBoard()}</div>;\n};\nBoard.propTypes = {\n  boxes: PropTypes.array.isRequired,\n  onClick: PropTypes.func.isRequired\n}\n\nexport default Board;","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst MovesHistory = ({ step, goTo }) => {\n  return (\n    <button\n      title=\"undo movement\"\n      disabled={step <= 0 ? \"disabled\" : false}\n      className={`${step <= 0 ? \"disabled\" : \"\"} settings-buttons undo`}\n      onClick={() => goTo(step - 1)}\n    >\n      <img alt=\"Undo movement\"  src=\"https://img.icons8.com/ios-glyphs/24/B7E5EE/undo.png\" />\n    </button>\n  );\n};\n\nMovesHistory.propTypes = {\n  step: PropTypes.number.isRequired,\n  goTo: PropTypes.func.isRequired\n};\n\nexport default MovesHistory;\n","import React from \"react\";\nimport PropTypes from 'prop-types';\n\nconst TurnHeader = ({ isPlayerOne }) => (\n  <header className=\"turn-header\">\n    <div className={isPlayerOne? 'play-turn-1' : 'player-turn'}>Player X</div>\n    <div className={isPlayerOne? 'player-turn' : 'play-turn-2'}>Player O</div>\n  </header>\n);\nTurnHeader.propTypes = {\n  isPlayerOne: PropTypes.bool.isRequired\n}\nexport default TurnHeader;","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst ResetGame = ({ goTo, isEndGame }) => {\n  return (\n    <button\n      title=\"Reset Game\"\n      className={isEndGame ? \"restart-game\" : \"settings-buttons reset-game\"}\n      onClick={() => goTo(0)}\n    >\n      {isEndGame ? (\n        \"Restart\"\n      ) : (\n        <img\n          alt=\"Reset game\"\n          src=\"https://img.icons8.com/ios/24/000000/synchronize-filled.png\"\n        />\n      )}\n    </button>\n  );\n};\n\nResetGame.propTypes = {\n  goTo: PropTypes.func.isRequired,\n  isEndGame: PropTypes.bool\n};\n\nexport default ResetGame;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport ResetGame from \"./ResetGame\";\nimport { PLAYER_ONE_SYMBOL, PLAYER_TWO_SYMBOL } from \"./App\";\n\nconst ResultModal = ({ gameResult, isPlayerOne, goTo }) => (\n  <div className={`modal ${gameResult !== null ? \"win\" : \"\"}`}>\n    <img\n      className=\"win-img\"\n      src=\"http://yi-nie.com/tic-tac-toe/img/win-img.png\"\n      alt=\"the winner is\"\n    />\n\n    {gameResult === \"win\" ? (\n      <span className=\"win-msg\">\n        Player\n        <i\n          className={`symbol-feedback ${isPlayerOne ? \"x-symbol\" : \"o-symbol\"}`}\n        >\n          {isPlayerOne ? PLAYER_ONE_SYMBOL : PLAYER_TWO_SYMBOL}\n        </i>\n        Wins!\n      </span>\n    ) : (\n      <span className=\"win-msg draw\">It's a Draw!</span>\n    )}\n    <ResetGame goTo={goTo} isEndGame={true} />\n  </div>\n);\nResultModal.propTypes = {\n  gameResult: PropTypes.string,\n  isPlayerOne: PropTypes.bool,\n  goTo: PropTypes.func\n};\n\nexport default ResultModal;\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Board from \"./Board\";\nimport MovesHistory from \"./MovesHistory\";\nimport TurnHeader from \"./TurnHeader\";\nimport ResetGame from \"./ResetGame\";\nimport ResultModal from \"./ResultModal\";\n\n\nexport const PLAYER_ONE_SYMBOL = \"X\";\nexport const PLAYER_TWO_SYMBOL = \"O\";\nclass TicTacToe extends Component {\n  static BOARD_ARRAY_LENGTH = 9;\n\n  state = {\n    history: [{ boxes: Array(TicTacToe.BOARD_ARRAY_LENGTH).fill(null) }],\n    step: 0,\n    playerOneIsNext: true\n  };\n\n  calculateWinner = boxes => {\n    const lines = [\n      [0, 1, 2],\n      [3, 4, 5],\n      [6, 7, 8],\n      [0, 3, 6],\n      [1, 4, 7],\n      [2, 5, 8],\n      [0, 4, 8],\n      [2, 4, 6]\n    ];\n    for (let i = 0; i < lines.length; i++) {\n      const [a, b, c] = lines[i];\n      if (boxes[a] && boxes[a] === boxes[b] && boxes[a] === boxes[c]) {\n        return true;\n      }\n    }\n    return false;\n  };\n\n  handleClick = i => {\n    const history = this.state.history.slice(0, this.state.step + 1);\n    const { boxes: current } = history[history.length - 1];\n    const boxes = current.slice();\n    let winner = this.calculateWinner(boxes);\n    if (winner || boxes[i]) {\n      return;\n    }\n    boxes[i] = this.state.playerOneIsNext\n      ? PLAYER_ONE_SYMBOL\n      : PLAYER_TWO_SYMBOL;\n    this.setState({\n      history: history.concat([{ boxes }]),\n      step: history.length,\n      playerOneIsNext: !this.state.playerOneIsNext\n    });\n  };\n\n  goTo = step => {\n    this.setState({\n      step,\n      playerOneIsNext: step % 2 === 0\n    });\n  };\n\n  render() {\n    const history = this.state.history;\n    const {boxes} = history[this.state.step];\n    const winner = this.calculateWinner(boxes);\n    const gameResult = winner ? 'win': boxes.some(entry => entry === null) ? null : 'draw';\n    return (\n      <div className=\"main\">\n        <h1 className=\"game-title\">Let's play the tic-tac-toe game!</h1>\n        <div className=\"container\">\n          <ResultModal goTo={this.goTo} isPlayerOne={!this.state.playerOneIsNext} gameResult={gameResult} />\n          <TurnHeader isPlayerOne={this.state.playerOneIsNext} />\n          <Board boxes={boxes} onClick={this.handleClick} />\n          <MovesHistory step={this.state.step} goTo={this.goTo} />\n          <ResetGame goTo={this.goTo} />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default TicTacToe;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport TicTacToe from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<TicTacToe />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}